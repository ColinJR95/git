{"version":3,"sources":["Components/Pokemon/Pokemon.jsx","Components/Card/Card.jsx","Components/CardList/CardList.jsx","Components/SearchBox/SearchBox.jsx","Containers/App/Masterdex.jsx","actions/types.js","actions/auth.js","Containers/Auth/Login.jsx","Containers/Auth/Signup.jsx","Containers/Auth/Activate.jsx","Containers/Auth/ResetPassword.jsx","Containers/Auth/ResetPasswordConfirm.jsx","Components/NavBar/NavBar.jsx","hocs/Layout.jsx","Containers/Auth/Home.jsx","reducers/auth.js","reducers/index.js","store.jsx","Containers/App/App.js","reportWebVitals.js","index.js"],"names":["Pokemon","pokemonId","handleClose","useHistory","useState","undefined","pokemon","setPokemon","useEffect","axios","get","then","response","data","catch","error","toFirstCharUpperCase","name","charAt","toUpperCase","slice","CircularProgress","id","species","height","weight","types","sprites","fullImageUrl","front_default","Typography","variant","style","width","src","alt","Link","href","url","map","typeInfo","type","generatePokemonJSX","Button","onClick","color","Card","sprite","setId","className","element","backgroundColor","CardList","currentId","setCurrentId","open","setOpen","handleOpen","console","log","body","monster","i","forms","Modal","display","alignItems","justifyContent","onClose","aria-labelledby","aria-describedby","SearchBox","searchChange","placeholder","onChange","App","pokemonData","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","searchField","setSearchField","initialURL","getPokemon","Promise","resolve","reject","fetch","res","json","getAllPokemon","a","next","previous","loadPokemon","results","fetchData","prev","all","pokemonRecord","_pokemonData","filteredPokemons","filter","toLowerCase","includes","textAlign","e","target","value","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","AUTHENTICATED_FAIL","AUTHENTICATED_SUCCESS","USER_LOADED_SUCCESS","USER_LOADED_FAIL","load_user","dispatch","localStorage","getItem","config","headers","process","payload","connect","state","isAuthenticated","auth","login","email","password","JSON","stringify","post","formData","setFormData","to","onSubmit","preventDefault","required","minLength","signup","re_password","accountCreated","setAccountCreated","verify","uid","token","props","verified","setVerified","flexDirection","marginTop","match","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","logout","authLinks","guestLinks","exact","data-toggle","data-target","aria-controls","aria-expanded","aria-label","checkAuthenticated","window","code","children","home","role","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","path","component","Home","render","Masterdex","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.610ff85c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Typography, Link, CircularProgress, Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst Pokemon = ({pokemonId, handleClose }) => {\r\n  const history = useHistory();\r\n  // const { match, history } = props;\r\n  // const { params } = match;\r\n  // const { pokemonId } = params; \r\n  const [pokemon, setPokemon] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        setPokemon(data);\r\n      })\r\n      .catch(function (error) {\r\n        setPokemon(false);\r\n      });\r\n  }, [pokemonId]);\r\n\r\nconst toFirstCharUpperCase = name => \r\nname.charAt(0).toUpperCase() + name.slice(1)\r\n\r\n  const generatePokemonJSX = (pokemon) => {\r\n    const { name, id, species, height, weight, types, sprites } = pokemon;\r\n    const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${pokemonId}.png`;\r\n    const { front_default } = sprites;\r\n    return (\r\n      <>\r\n        <Typography variant=\"h3\">\r\n          {`${id}.`} {toFirstCharUpperCase(name)}\r\n          {/* <img src={front_default} alt=\"\" /> */}\r\n        </Typography>\r\n        <img style={{ width: \"200px\", height: \"200px\" }} src={fullImageUrl} alt=\"\" />\r\n        <Typography variant=\"h3\">Pokemon Info</Typography>\r\n        <Typography>\r\n          {\"Species: \"}\r\n          <Link href={species.url}>{species.name} </Link>\r\n        </Typography>\r\n        <Typography>Height: {height} </Typography>\r\n        <Typography>Weight: {weight} </Typography>\r\n        <Typography variant=\"h3\"> Types:</Typography>\r\n        {types.map((typeInfo) => {\r\n          const { type } = typeInfo;\r\n          const { name } = type;\r\n          return <Typography key={name}> {`${name}`}</Typography>;\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {pokemon === undefined && <CircularProgress />}\r\n      {pokemon !== undefined && pokemon && generatePokemonJSX(pokemon)}\r\n      {pokemon === false && <Typography> Pokemon not found</Typography>}\r\n      {pokemon !== undefined && (\r\n        <Button variant=\"contained\" onClick={handleClose}>\r\n          back to pokedex\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Pokemon;","import React from 'react';\r\nimport './Card.scss';\r\nimport Tilt from 'react-tilt'\r\nimport Pokemon from '../Pokemon/Pokemon';\r\n\r\nconst color = {\r\n    'ice': '#98D8D8',\r\n    'normal': '#A8A878',\r\n    'fire': '#F08030',\r\n    'fighting': '#C13928',\r\n    'water': '#6890F0',\r\n    'flying': '#A890F0',\r\n    'grass': '#78C850',\r\n    'poison': '#A250A1',\r\n    'electric': '#F8D031',\r\n    'ground': '#E0C068',\r\n    'psychic': '#ED5887',\r\n    'rock': '#B8A038',\r\n    'bug': '#A8B820',\r\n    'dragon': '#7A70F8',\r\n    'ghost': '#705898',\r\n    'dark': '#705848',\r\n    'steel': '#B8B8D0',\r\n    'fairy': '#EE99AC',\r\n    'default': '#68A090'\r\n}\r\n\r\nfunction Card({ name, type, sprite, id, setId}) {\r\n\r\n\r\n    return (\r\n        <Tilt className=\"Tilt pa2\">\r\n            <div className=\"Tilt-inner tc w5 bg-red dib br3 pa3 ma2 dim bw2 shadow-5 pointer\">\r\n                <div onClick = {() => setId(id)} className=\"flex flex-column items-center\">\r\n                    <img src={sprite} className='bg-light-yellow br-100 ba b--black-10' alt={`${name}`}/>             \r\n                    <h2 className=\"bg-yellow br1 ma2 pa2\">{name}</h2>\r\n                    <div className=\"h3 flex flex-column justify-center\">\r\n                        {type.map(element => (<p style={{backgroundColor: color[element]}} className={`ma1 br2 ba b--black-30 pa1 bg-${element}`}>{element}</p>)\r\n                \r\n                            )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Tilt>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { useState } from 'react';\r\nimport Card from '../Card/Card';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Pokemon from '../Pokemon/Pokemon'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './CardList.scss'\r\n\r\n\r\n\r\n//adding modal here\r\nfunction CardList({ pokemon, id }) {\r\n\r\n    const [currentId, setCurrentId] = useState(null);\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = (id) => {\r\n        setCurrentId(id);\r\n        setOpen(true);\r\n      };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n    \r\n    \r\n    const setId = (id) => {\r\n        setCurrentId(id)\r\n    }\r\n    console.log(currentId)\r\n\r\n    const body = (\r\n    <div className='modal'>\r\n\r\n      <Pokemon pokemonId={currentId} handleClose={handleClose} />\r\n    </div>\r\n  );\r\n\r\n    return (\r\n\r\n        <div className=\"flex flex-wrap items-center justify-center\">\r\n            {\r\n                pokemon.map((monster, i) => {\r\n                    return (\r\n                    <Card \r\n                        key={monster.name}\r\n                        name={monster.forms[0].name}\r\n                        type={monster.types.map( type => type.type.name)}\r\n                        sprite={monster.sprites.front_default}\r\n                        setId={handleOpen} \r\n                        id={monster.id}\r\n\r\n                    />);\r\n                })\r\n            }\r\n                    <Modal className = 'modal'\r\n                    style={{display:'flex',alignItems:'center',justifyContent:'center'}}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                        > \r\n                    {body}\r\n                        </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React, { Fragment } from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <Fragment>\r\n            <div className='center pa2'>\r\n                <input\r\n                    className='pa3 ba tc b--green bg-lightest-blue' \r\n                    type=\"search\" \r\n                    placeholder=\"Search Pokémons\"\r\n                    onChange={searchChange} \r\n                />\r\n            </div>\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, { useState, useEffect } from 'react';\r\nimport CardList from '../../Components/CardList/CardList';\r\nimport './App.scss';\r\nimport SearchBox from '../../Components/SearchBox/SearchBox';\r\nimport Pokemon from '../../Components/Pokemon/Pokemon'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nfunction App() {\r\n  const [pokemonData, setPokemonData] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState('');\r\n  const [prevUrl, setPrevUrl] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchField, setSearchField] = useState('');\r\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon'\r\n  const history = useHistory();\r\n\r\n\r\n   function getPokemon({ url }) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}\r\n \r\n   async function getAllPokemon(url) {\r\n      return new Promise((resolve, reject) => {\r\n          fetch(url).then(res => res.json())\r\n              .then(data => {\r\n                  resolve(data)\r\n              })\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let response = await getAllPokemon(initialURL)\r\n      setNextUrl(response.next);\r\n      setPrevUrl(response.previous);\r\n      await loadPokemon(response.results);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  const next = async () => {\r\n    setLoading(true);\r\n    let data = await getAllPokemon(nextUrl);\r\n    await loadPokemon(data.results);\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    setLoading(false);\r\n  }\r\n\r\n  const prev = async () => {\r\n    if (!prevUrl) return;\r\n    setLoading(true);\r\n    let data = await getAllPokemon(prevUrl);\r\n    await loadPokemon(data.results);\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    setLoading(false);\r\n  }\r\n\r\n\r\n\r\n  const loadPokemon = async (data) => {\r\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\r\n      let pokemonRecord = await getPokemon(pokemon)\r\n      return pokemonRecord\r\n    }))\r\n    setPokemonData(_pokemonData);\r\n  }\r\n\r\n  const onSearchChange = e => setSearchField(e.target.value);\r\n\r\n  const filteredPokemons = pokemonData.filter(pokemon => pokemon.forms[0].name.toLowerCase().includes(searchField.toLowerCase()));\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div>\r\n        {loading ? <h1 style={{ textAlign: 'center' }}>Loading...</h1> : (\r\n          <>\r\n            <div className=\"flex items-center justify-center\">\r\n              <h1 className='f1 pa3 w6 br2 ba b--dark-red bg-yellow ma2'>FullStack Pokedex</h1>\r\n            </div>\r\n            \r\n            <div className= 'flex items-center justify-center' >\r\n               <SearchBox searchChange={onSearchChange}/>\r\n            </div>\r\n            \r\n            <div className=\"btn\">\r\n              <button onClick={prev}>Prev</button>\r\n              <button onClick={next}>Next</button>\r\n            </div>\r\n            <div className=\"flex items-center justify-center\">\r\n               <CardList pokemon={filteredPokemons} />\r\n\r\n            </div>\r\n            <div className=\"btn\">\r\n              <button onClick={prev}>Prev</button>\r\n              <button onClick={next}>Next</button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\nexport const RESET_PASSWORD_CONFIRM_SUCCESS = 'RESET_PASSWORD_CONFIRM_SUCCESS';\r\nexport const RESET_PASSWORD_CONFIRM_FAIL = 'RESET_PASSWORD_CONFIRM_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';","import axios from 'axios';\r\nimport {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAIL,\r\n    RESET_PASSWORD_CONFIRM_SUCCESS,\r\n    RESET_PASSWORD_CONFIRM_FAIL,\r\n    LOGOUT,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS\r\n} from './types';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (typeof window == 'undefined') {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n    \r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n    \r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\r\n    \r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = ({ name, email, password, re_password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name, email, password, re_password }); \r\n    console.log('this is the body', body)   \r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL,\r\n            payload: err\r\n        });\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ uid, token }); \r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email }); \r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password }); \r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: LOGOUT });\r\n};","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/pokemon' />;\r\n    \r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Sign into your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Login</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n            Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n            </p>\r\n            <p className='mt-3'>\r\n            Forgot your Password? <Link to='/reset_password'>Reset Password</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { signup } from '../../actions/auth';\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n\r\n    const { name, email, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            signup({ name, email, password, re_password });\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n    console.log(formData)\r\n    if (isAuthenticated)\r\n        return <Redirect to='/' />;\r\n    if (accountCreated)\r\n        return <Redirect to='login' />;\r\n    \r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign Up</h1>\r\n            <p>Create your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Name*'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={e => onChange(e)}\r\n                        required \r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email*'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required \r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password*'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm Password*'\r\n                        name='re_password'\r\n                        value={re_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary'  type='submit'>Register</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Already have an account? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../../actions/auth';\r\n\r\nconst Activate = (props) => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = props.match.params.uid;\r\n        const token = props.match.params.token;\r\n\r\n        props.verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified)\r\n        return <Redirect to='/' />\r\n    return (\r\n        <div className='container'>\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column',marginTop: '200px' }}>\r\n                <h1>Verify your Account:</h1>\r\n                <button \r\n                    onClick={verify_account}\r\n                    style={{ marginTop: '50px' }}\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                >\r\n                    Verify\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../../actions/auth';\r\n\r\nconst ResetPassword = ({reset_password}) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: ''\r\n    });\r\n\r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent)\r\n        return <Redirect to='/' />\r\n    return (\r\n        <div className='container'>\r\n            <h1>Request Password Reset:</h1>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Your Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../../actions/auth';\r\n\r\nconst ResetPasswordConfirm = ({match, reset_password_confirm}) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        match.reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent)\r\n        return <Redirect to='/' />\r\n    return (\r\n        <div className='container mt-5'>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='New Password'\r\n                        name='new_password'\r\n                        value={new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm New Password'\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);","import React, { Fragment } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ isAuthenticated, logout }) => {\r\n    const authLinks = (\r\n        <li className=\"nav-item\">\r\n            <Link className='nav-link' onClick={logout} to='/'>Logout</Link>\r\n        </li>\r\n    );\r\n\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" exact to='/login'>Login</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" exact to='/signup'>Sign Up</NavLink>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand\" to='/'>Full-Stack PokeDex</Link>\r\n            <button \r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarNav\"\r\n                aria-controls=\"navbarNav\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n            >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" exact to='/'>Home</NavLink>\r\n                    </li>\r\n                    { <Fragment>{ isAuthenticated ? authLinks : guestLinks }</Fragment> }\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);","import React, {useEffect} from 'react';\r\nimport Navbar from '../Components/NavBar/NavBar';\r\nimport {connect} from 'react-redux';\r\nimport {checkAuthenticated, load_user} from '../actions/auth';\r\n\r\n\r\nconst Layout = (props) => {\r\n\tuseEffect(() => {\r\n\t\tprops.checkAuthenticated();\r\n\t\tprops.load_user();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Navbar/>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n\r\n};\r\n\r\n\r\nexport default connect(null, {checkAuthenticated, load_user})(Layout);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst home = () => (\r\n    <div className='container flex'>\r\n        <div className=\"jumbotron mt-5\">\r\n            <h1 className=\"display-4\">Welcome to the Full-Stack PokeDex!</h1>\r\n            <p className=\"lead\">This is a super cool PokeDex system with all kinds of functionalities.</p>\r\n            <hr className=\"my-4\" />\r\n            <p>Go ahead and login to start!</p>\r\n            <Link className=\"btn btn-primary btn-lg\" to='/login' role=\"button\">Login</Link>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default home;","import {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n        console.log(payload)\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case SIGNUP_FAIL: console.log(payload)\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React, { useState, useEffect } from 'react';\r\nimport CardList from '../../Components/CardList/CardList';\r\nimport Masterdex from './Masterdex'\r\nimport './App.scss';\r\nimport SearchBox from '../../Components/SearchBox/SearchBox';\r\nimport Pokemon from '../../Components/Pokemon/Pokemon'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Login from '../Auth/Login';\r\nimport Signup from '../Auth/Signup';\r\nimport Activate from '../Auth/Activate';\r\nimport ResetPassword from '../Auth/ResetPassword';\r\nimport ResetPasswordConfirm from '../Auth/ResetPasswordConfirm';\r\nimport Layout from '../../hocs/Layout'\r\nimport Home from '../Auth/Home';\r\n\r\nimport {Provider} from 'react-redux'\r\nimport store from '../../store'\r\n\r\n\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/pokemon\" \r\n          render={(props) => {\r\n           return (localStorage.getItem('access')) ?\r\n           <Masterdex {...props} /> \r\n           : <Home {...props} />\r\n            }}/>\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n          <Route exact path=\"/reset_password\" component={ResetPassword} />\r\n          <Route exact path=\"/password/reset/confirm/:uid/:token\" component={ResetPasswordConfirm} />\r\n          <Route exact path=\"/activate/:uid/:token\" component={Activate} />\r\n        </Switch>\r\n      </Layout>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Containers/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\t  \r\n\t  \t <App />\r\n\t  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}